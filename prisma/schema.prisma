generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://pustakaprodv2:ebooks%23Pustaka@pustaka-prod-db-v2.cokqzfziewag.ap-south-1.rds.amazonaws.com:3306/pustaka_prod_v4"
}

model amazon_books {
  id                     Int       @id @default(autoincrement())
  activate               Int?
  reference_id           String    @db.VarChar(15)
  print_book_isbn        String?   @db.VarChar(15)
  eisbn                  String?   @db.VarChar(15)
  imprint                String?   @db.VarChar(50)
  title                  String    @db.VarChar(50)
  author                 String    @db.VarChar(50)
  editors                String?   @db.VarChar(45)
  illustrators           String?   @db.VarChar(45)
  contributors           String?   @db.VarChar(45)
  translators            String?   @db.VarChar(45)
  photographers          String?   @db.VarChar(45)
  language               String    @db.VarChar(5)
  digital_list_price_usd Float     @db.Float
  digital_list_price_inr Float     @db.Float
  release_date           DateTime  @db.Date
  publishing_date        DateTime? @db.Date
  description            String?   @db.VarChar(4000)
  bisac                  String?   @db.VarChar(10)
  bic                    String?   @db.VarChar(45)
  territory              String?   @db.VarChar(45)
  exclude_territory      String?   @db.VarChar(45)
  adult_flag             String?   @db.VarChar(45)
  edition                Int?
  series_title           String?   @db.VarChar(45)
  series_number          Int?
  volume                 Int?
  keywords               String?   @db.VarChar(45)
  asin                   String    @db.VarChar(15)
  amazon_url             String?   @db.VarChar(100)
  book                   book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id                Int       @unique
  author_id              Int
  copyright_owner        Int?
  language_id            Int
  status                 Int?
  ku_enabled             Int?
  ku_activation_date     DateTime? @db.Date
  ku_us_enabled          Int?
  ku_uk_enabled          Int?
}

model amazon_transactions {
  id                       Int       @id @default(autoincrement())
  invoice_date             DateTime  @db.Date
  original_invoice_date    DateTime? @db.Date
  asin                     String    @db.VarChar(15)
  physical_isbn10          String    @db.VarChar(15)
  physical_isbn13          String    @db.VarChar(15)
  digital_isbn             String    @db.VarChar(15)
  title                    String    @db.VarChar(50)
  author                   String    @db.VarChar(50)
  units_purchased          Int
  units_refunded           Int
  net_units                Int
  net_units_mtd            Int
  adjustments_made         Int
  list_price               Float     @db.Float
  list_price_currency      String    @db.VarChar(5)
  publisher_price          Float     @db.Float
  publisher_price_currency String    @db.VarChar(5)
  discount_percentage      Int
  payment_amount           Float     @db.Float
  payment_currency         String    @db.VarChar(5)
  program_type             String    @db.VarChar(10)
  book                     book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id                  Int       @unique
  author_id                Int
  user_id                  Int?
  copyright_owner          Int?
  language_id              Int
  currency_exchange        Float     @db.Float
  inr_value                Float     @db.Float
  tax_value                Float?    @db.Float
  final_royalty_value      Float     @db.Float
  status                   String    @db.VarChar(1)
}

model amazon_paperback_books {
  id              Int      @id @default(autoincrement())
  book_id         Int      @unique
  asin            Int?
  price           Int?
  copyright_owner Int?
  author_id       Int?
  language        Int?
  book            book_tbl @relation(fields: [book_id], references: [book_id])
}

model audible_books {
  id                Int       @id @default(autoincrement())
  product_id        String?   @db.VarChar(45)
  audible_asin      String?   @db.VarChar(15)
  amazon_asin       String?   @db.VarChar(15)
  title             String?   @db.VarChar(150)
  authors           String?   @db.VarChar(100)
  narrators         String?   @db.VarChar(100)
  first_online_date DateTime? @db.Date
  language_id       Int?
  book              book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id           Int       @unique
  author_id         Int?
  copyright_owner   Int?
}

model audible_transactions {
  id                  Int       @id @default(autoincrement())
  royalty_earner      String?   @db.VarChar(100)
  parent_product_id   String?   @db.VarChar(45)
  name                String?   @db.VarChar(150)
  author              String?   @db.VarChar(100)
  isbn                String?   @db.VarChar(45)
  provider_product_id String?   @db.VarChar(45)
  market_place        String?   @db.VarChar(10)
  offer               String?   @db.VarChar(45)
  royalty_rate        String?   @db.VarChar(45)
  alc_qty             Int?
  alc_net_sales       Float?    @db.Float
  alc_royalty         Float?    @db.Float
  al_qty              Int?
  al_net_sales        Float?    @db.Float
  al_royalty          Float?    @db.Float
  alop_qty            Int?
  alop_net_sales      Float?    @db.Float
  alop_royalty        Float?    @db.Float
  total_qty           Int?
  total_net_sales     Float?    @db.Float
  total_royalty       Float?    @db.Float
  book                book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id             Int       @unique
  author_id           Int?
  language_id         Int?
  copyright_owner     Int?
  user_id             Int?
  final_royalty_value Float?    @db.Float
  transaction_date    DateTime? @db.Date
  status              String?   @db.VarChar(3)
}

model audio_book_details {
  id                   Int       @id @default(autoincrement())
  book_id              Int?
  chapter_id           Int?
  chapter_name         String?   @db.VarChar(200)
  chapter_name_english String?   @db.VarChar(200)
  chapter_url          String?   @db.VarChar(200)
  chapter_duration     String?   @db.VarChar(15)
  created_at           DateTime? @default(now()) @db.Timestamp(0)
}

model author_gift_books {
  id        Int       @id @default(autoincrement())
  author_id Int?
  book_id   Int?
  user_id   Int       @unique
  date      DateTime? @default(now()) @db.Timestamp(0)

  book   book_tbl  @relation(fields: [bookId], references: [book_id])
  bookId Int
  user   users_tbl @relation(fields: [user_id], references: [user_id])
}

model author_language {
  id                   Int          @id @default(autoincrement())
  author_id            Int?
  language             language_tbl @relation(fields: [language_id], references: [language_id])
  language_id          Int          @unique
  display_name1        String?      @db.VarChar(45)
  display_name2        String?      @db.VarChar(45)
  regional_author_name String?      @db.VarChar(45)
}

model author_royalty_details {
  id                       Int       @id @default(autoincrement())
  copyright_owner          Int?
  author_id                Int?
  pustaka                  Float?    @db.Float
  amazon                   Float?    @db.Float
  kobo                     Float?    @db.Float
  scribd                   Float?    @db.Float
  google                   Float?    @db.Float
  overdrive                Float?    @db.Float
  storytel                 Float?    @db.Float
  audible                  Float?    @db.Float
  settlement_date          DateTime? @db.Timestamp(0)
  bank_transaction_details String?   @db.VarChar(200)
}

model author_tbl {
  author_id                 Int                 @id @default(autoincrement())
  author_name               String              @db.VarChar(100)
  url_name                  String?             @db.VarChar(100)
  author_type               Int?
  author_image              String?             @db.VarChar(200)
  copy_right_owner_name     String              @db.VarChar(100)
  relationship              String              @db.VarChar(40)
  mobile                    String?             @db.VarChar(15)
  phone                     String?             @db.VarChar(15)
  email                     String?             @db.VarChar(40)
  address                   String?             @db.Text
  fb_url                    String?             @db.VarChar(2048)
  twitter_url               String?             @db.VarChar(2048)
  blog_url                  String?             @db.VarChar(2048)
  description               String?             @db.Text
  status                    String              @default(dbgenerated("0"))
  created_at                DateTime            @default(now()) @db.Timestamp(0)
  activated_at              DateTime?           @db.Timestamp(0)
  created_by                Int
  gender                    String              @db.Char(1)
  copyright_owner           Int?
  user_id                   Int
  narrator_id               Int?
  amazon_link               String?             @db.VarChar(200)
  pratilipi_link            String?             @db.VarChar(200)
  audible_link              String?             @db.VarChar(200)
  odilo_link                String?             @db.VarChar(200)
  scribd_link               String?             @db.VarChar(200)
  googlebooks_link          String?             @db.VarChar(200)
  storytel_link             String?             @db.VarChar(200)
  overdrive_link            String?             @db.VarChar(200)
  pinterest_link            String?             @db.VarChar(200)
  agreement_details         String?             @db.Text
  agreement_ebook_count     Int?
  agreement_audiobook_count Int?
  agreement_paperback_count Int?
  copyright_mapping         copyright_mapping[]
}

model author_transaction {
  id                                     Int       @id @default(autoincrement())
  order_id                               Int       @unique
  order_date                             DateTime? @db.Date
  book                                   book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id                                Int       @unique
  author_id                              Int
  order_type                             String    @db.Char(1)
  copy_right_seller                      Int
  copy_right_lender                      Int
  copyright_owner                        Int?
  currency                               String?   @db.VarChar(3)
  book_final_royalty_value_inr           Float
  book_final_royalty_value_usd           Float
  discount_provided                      Float
  usd_exchange_rate                      Float     @db.Float
  converted_book_final_royalty_value_inr Float
  exchange_rate_comments                 String    @db.LongText
  selling_royalty_percentage             Float     @db.Float
  lending_royalty_percentage             Float     @db.Float
  pay_status                             String    @db.Char(1)
  comments                               String    @db.LongText
}

model blog_comments {
  id           Int      @id @default(autoincrement())
  user_id      Int
  user_name    String   @db.VarChar(50)
  blog_name    String   @db.VarChar(100)
  comments     String   @db.Text
  email_id     String?  @db.VarChar(45)
  status       Int
  date_created DateTime @default(now()) @db.Timestamp(0)
}

model book_tbl {
  book_id                    Int               @id @default(autoincrement())
  author_name                Int
  book_title                 String            @db.VarChar(200)
  url_name                   String?           @db.VarChar(100)
  regional_book_title        String            @db.VarChar(200)
  language_tbl_relation      language_tbl      @relation(fields: [language], references: [language_id])
  language                   Int               @unique
  isbn_number                String?           @db.VarChar(20)
  cover_image                String?           @db.VarChar(200)
  description                String?           @db.Text
  cost                       Int
  number_of_page             Int?
  genre                      genre_details_tbl @relation(fields: [genre_id], references: [genre_id])
  genre_id                   Int               @unique
  book_category              String            @default("Novel") @db.VarChar(30)
  type_of_book               Int
  publisher                  String?           @db.VarChar(100)
  download_link              String            @db.VarChar(200)
  epub_url                   String            @db.VarChar(200)
  royalty                    String?           @db.VarChar(45)
  copyright_owner            Int?
  status                     Boolean           @default(true)
  created_at                 DateTime          @default(now()) @db.Timestamp(0)
  activated_at               DateTime?         @db.Timestamp(0)
  created_by                 Int
  book_cost_international    Float             @default(0)
  narrator_id                Int?
  rental_cost_inr            Int?
  rental_cost_usd            Float?            @db.Float
  paper_back_flag            Int?
  paper_back_inr             Float?            @db.Float
  paper_back_royalty         String?           @db.VarChar(45)
  paper_back_readiness_flag  Int?
  book_id_mapping            Int?
  agreement_flag             Int?
  paper_back_pages           Int?
  paper_back_weight          Float?            @db.Float
  paper_back_copyright_owner Int?
  paper_back_isbn            String?           @db.VarChar(20)
  paper_back_remarks         String?           @db.Text
  mintbook_cost              Int?

  amazonBookId    amazon_books?
  scribdBookId    scribd_books?
  googleBookId    google_books?
  storytelBookId  storytel_books?
  overdriveBookId overdrive_books?
  audibleBookId   audible_books?

  giftBooks              author_gift_books[]
  amazon_transactions    amazon_transactions?
  audible_transactions   audible_transactions?
  author_transaction     author_transaction?
  google_transactions    google_transactions?
  kobo_transaction       kobo_transaction?
  overdrive_transactions overdrive_transactions?
  scribd_transaction     scribd_transaction?
  storytel_transactions  storytel_transactions?
  pratilipi_books        pratilipi_books?
  amazon_paperback_books amazon_paperback_books?
  pod_bookfair           pod_bookfair?
}

model book_types {
  book_type_id Int      @id @default(autoincrement())
  type_name    String   @db.VarChar(50)
  url_name     String   @db.VarChar(250)
  status       Int      @default(dbgenerated("0"))
  created_at   DateTime @db.DateTime(0)
  updated_at   DateTime @db.DateTime(0)
  image_url    String?  @db.VarChar(45)
}

model books_metadata {
  id                     Int       @id @default(autoincrement())
  book_id                Int
  description            Boolean
  type_of_book           Int       @default(1) @db.TinyInt
  content_type           String    @db.VarChar(100)
  hard_copy_type         String    @db.VarChar(100)
  soft_copy_type         String    @db.VarChar(100)
  final_page_number      Int
  allocated_date         DateTime? @db.DateTime(0)
  start_date             DateTime? @db.DateTime(0)
  completion_date        DateTime? @db.DateTime(0)
  payment_date           DateTime  @db.DateTime(0)
  settled_page_number    Int
  payment_status         Int       @default(0) @db.TinyInt
  assigned_by            Int
  assigned_to            Int
  price_per_page         Float     @db.Float
  initial_page_number    Int?
  general_file_path      String    @db.VarChar(100)
  url_title              String    @db.VarChar(100)
  unique_key             String    @db.VarChar(8)
  pustaka_cover_status   Int       @default(0) @db.TinyInt
  general_cover_status   Int       @default(0) @db.TinyInt
  general_epub_status    Int       @default(0) @db.TinyInt
  pustaka_epub_status    Int       @default(0) @db.TinyInt
  amazon_epub_status     Int       @default(0) @db.TinyInt
  pustaka_flippdf_status Int       @default(0) @db.TinyInt
  pustaka_word_status    Int       @default(0) @db.TinyInt
  priority               String    @db.Text
  current_state          Int?
  remarks                String?   @db.Text
}

model books_processing {
  id                     Int       @id @default(autoincrement())
  book_id                Int?
  stage_id               Int?
  type_of_book           String?   @db.VarChar(20)
  content_type           String?   @db.VarChar(20)
  hard_copy_type         String?   @db.VarChar(20)
  soft_copy_type         String?   @db.VarChar(20)
  initial_page_number    Int?
  pustaka_cover_status   Int?      @default(0) @db.TinyInt
  pustaka_epub_status    Int?      @default(0) @db.TinyInt
  pustaka_flippdf_status Int?      @default(0) @db.TinyInt
  priority               String?   @db.VarChar(10)
  date_created           DateTime? @db.DateTime(0)
  completed              Int?      @default(0)
  rework                 Int?      @default(0)
}

model books_progress {
  id                Int       @id @default(autoincrement())
  book_id           Int?
  status            Int?
  stage             Int?
  startdate         DateTime? @db.DateTime(0)
  enddate           DateTime? @db.DateTime(0)
  on_hold_startdate DateTime? @db.DateTime(0)
  on_hold_enddate   DateTime? @db.DateTime(0)
  remarks           String?   @db.Text
}

model contact_us {
  id           Int       @id @default(autoincrement())
  user_id      Int?
  subject      String?   @db.VarChar(100)
  message      String?   @db.Text
  date_created DateTime? @db.Date
}

model copyright_mapping {
  id              Int         @id @default(autoincrement())
  copyright_owner Int?
  author          author_tbl? @relation(fields: [author_id], references: [author_id])
  author_id       Int?
  date_created    DateTime?   @db.DateTime(0)
}

model episode_book_details {
  id                   Int       @id @default(autoincrement())
  episode_book_id      Int?
  chapter_name         String?   @db.VarChar(45)
  chapter_name_english String?   @db.VarChar(45)
  chapter_epub_url     String?   @db.VarChar(200)
  chapter_num_pages    Int?
  chapter_status       Int?
  chapter_activated_at DateTime? @default(now()) @db.Timestamp(0)
}

model episode_book_tbl {
  episode_book_id     Int       @id @default(autoincrement())
  book_title          String?   @db.VarChar(200)
  author_id           Int?
  url_name            String?   @db.VarChar(200)
  cover_image         String?   @db.VarChar(200)
  regional_book_title String?   @db.VarChar(200)
  language            Int?
  type_of_book        Int?
  genre_id            Int?
  book_category       String?   @db.VarChar(45)
  description         String?   @db.Text
  status              Int?
  day_of_chapter      String?   @db.VarChar(100)
  activated_at        DateTime? @default(now()) @db.Timestamp(0)
}

model fixed_royalty {
  id                  Int       @id @default(autoincrement())
  transaction_date    DateTime? @db.Date
  user_id             Int?
  copyright_owner     Int?
  fixed_royalty_value Int?
  author_id           Int?
  status              Int?
}

model free_book_subscription {
  seq_id          Int      @id @default(autoincrement())
  user_id         BigInt
  book_id         BigInt
  date_subscribed DateTime @default(now()) @db.Timestamp(0)
  comments        String   @db.Text
}

model genre_details_tbl {
  genre_id   Int     @id @default(autoincrement())
  admin_id   Int
  genre_name String  @db.VarChar(50)
  url_name   String  @db.VarChar(250)
  lang_0     String? @db.VarChar(30)
  lang_1     String  @default("0") @db.VarChar(30)
  lang_2     String  @default("0") @db.VarChar(30)
  lang_3     String  @default("0") @db.VarChar(30)
  lang_4     String  @default("0") @db.VarChar(30)
  lang_5     String? @db.VarChar(30)
  status     Int     @default(dbgenerated("0"))
  bisac_code String? @db.VarChar(45)
  image_url  String? @db.VarChar(45)

  books book_tbl[]
}

model google_books {
  id                          Int       @id @default(autoincrement())
  identifier                  String?   @db.VarChar(30)
  status                      String?   @db.VarChar(15)
  label                       String?   @db.VarChar(15)
  play_store_link             String?   @db.VarChar(120)
  enable_for_sale             Boolean?
  title                       String?   @db.VarChar(100)
  subtitle                    String?   @db.VarChar(100)
  book_format                 String?   @db.VarChar(15)
  related_identifier          String?   @db.VarChar(30)
  contributor                 String?   @db.VarChar(50)
  biographical_note           String?   @db.Text
  language                    String?   @db.VarChar(5)
  subject_code                String?   @db.VarChar(20)
  age_group                   String?   @db.VarChar(50)
  description                 String?   @db.Text
  publication_date            String?   @db.VarChar(15)
  page_count                  Int?
  series_name                 String?   @db.VarChar(20)
  volume_in_series            Int?
  preview_type                String?   @db.VarChar(5)
  preview_territories         String?   @db.VarChar(20)
  buy_link_text               String?   @db.VarChar(50)
  buy_link                    String?   @db.VarChar(50)
  publisher_name              String?   @db.VarChar(30)
  publisher_website           String?   @db.VarChar(50)
  show_photos_preview         Boolean?
  pdf_download                Boolean?
  on_sale_date                String?   @db.VarChar(15)
  drm_enabled                 Boolean?
  show_photos_ebook           Boolean?
  include_scanned_pages       Boolean?
  mature_audiences            Boolean?
  copy_paste_percentage       String?   @db.VarChar(5)
  enable_school_use           Boolean?
  school_list_price_60        Float?    @db.Float
  school_list_price_180       Float?    @db.Float
  school_list_price_360       Float?    @db.Float
  school_use_countries        String?   @db.VarChar(50)
  duration                    DateTime? @db.Time(0)
  preview_length_minutes      Int?
  preview_length_percentage   Int?
  abridged_version            String?   @db.Text
  inr_price_including_tax     Float?    @db.Float
  inr_countries_including_tax String?   @db.VarChar(50)
  usd_price_including_tax     Float?    @db.Float
  usd_countries_including_tax String?   @db.VarChar(50)
  inr_price_excluding_tax     Float?    @db.Float
  inr_countries_excluding_tax String?   @db.VarChar(50)
  usd_price_excluding_tax     Float?    @db.Float
  usd_countries_excluding_tax String?   @db.VarChar(50)
  eur_price_including_tax     Int?
  eur_price_excluding_tax     Int?
  eur_countries_including_tax String?   @db.Text
  eur_countries_excluding_tax String?   @db.Text
  book                        book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id                     Int       @unique
  author_id                   Int?
  copyright_owner             Int?
  language_id                 Int?
  publish_date                DateTime? @db.Date
}

model google_transactions {
  id                           Int      @id @default(autoincrement())
  earnings_date                DateTime @db.Date
  transaction_date             DateTime @db.Date
  unique_id                    String   @db.VarChar(50)
  product                      String   @db.VarChar(20)
  type                         String   @db.VarChar(10)
  preorder                     String   @db.VarChar(10)
  qty                          Int
  primary_isbn                 String   @db.VarChar(25)
  imprint_name                 String   @db.VarChar(50)
  title                        String   @db.VarChar(100)
  author                       String   @db.VarChar(50)
  original_list_price_currency String   @db.VarChar(5)
  original_list_price          Float    @db.Float
  list_price_currency          String   @db.VarChar(5)
  list_price_tax_inclusive     Float    @db.Float
  list_price_tax_exclusive     Float    @db.Float
  country_of_sale              String   @db.VarChar(5)
  publisher_revenue_percentage String   @db.VarChar(4)
  publisher_revenue            Float    @db.Float
  earnings_currency            String   @db.VarChar(5)
  earnings_amount              Float    @db.Float
  currency_conversion_rate     Float    @db.Float
  line_of_business             String   @db.VarChar(15)
  book                         book_tbl @relation(fields: [book_id], references: [book_id])
  book_id                      Int      @unique
  author_id                    Int
  language_id                  Int
  currency_exchange            Float    @db.Float
  inr_value                    Float    @db.Float
  final_royalty_value          Float    @db.Float
  user_id                      Int
  copyright_owner              Int?
  type_of_book                 Int?
  status                       String?  @db.VarChar(10)
}

model kobo_transaction {
  id                         Int      @id @default(autoincrement())
  transaction_date           DateTime @db.Date
  country                    String   @db.VarChar(15)
  state                      String?  @db.VarChar(20)
  zipcode                    String?  @db.VarChar(10)
  content_type               String?  @db.VarChar(25)
  quantity                   Int?
  refund_reason              String?  @db.VarChar(45)
  dealID                     String?  @db.VarChar(45)
  publisher_name             String?  @db.VarChar(60)
  imprint                    String?  @db.VarChar(60)
  eISBN                      String   @db.VarChar(15)
  author_name                String   @db.VarChar(50)
  book_title                 String   @db.VarChar(60)
  list_price                 Int
  tax_excluded               Float?   @db.Float
  COGS_percentage            Float    @db.Float
  COGS_amount                Float?   @db.Float
  list_price_currency        String   @db.VarChar(5)
  foreign_exchange           Float    @db.Float
  COGS_payable               Float    @db.Float
  COGS_based_lp              Float?   @db.Float
  COGS_based_lp_excluded_tax Float?   @db.Float
  COGS_based_lp_currency     Float?   @db.Float
  COGS_adjustment            Float?   @db.Float
  net_due                    Float    @db.Float
  payable_currency           String   @db.VarChar(5)
  total_tax                  Float?   @db.Float
  book                       book_tbl @relation(fields: [book_id], references: [book_id])
  book_id                    Int      @unique
  author_id                  Int
  paid_inr                   Float    @db.Float
  user_id                    Int
  copyright_owner            Int?
  status                     String   @db.VarChar(2)
}

model language_tbl {
  language_id            Int      @id @default(autoincrement())
  admin_id               Int
  language_name          String   @db.VarChar(100)
  regional_language_name String   @db.VarChar(20)
  url_name               String?  @db.VarChar(45)
  image_url              String?  @db.VarChar(45)
  status                 Int      @default(dbgenerated("0"))
  created_at             DateTime @db.DateTime(0)
  updated_at             DateTime @db.DateTime(0)

  books           book_tbl[]
  authorLanguages author_language[]
}

model ledger_head_tbl {
  id               Int      @id @default(autoincrement())
  ledger_head_name String   @db.VarChar(45)
  date_created     DateTime @db.DateTime(0)
}

model narrator_tbl {
  narrator_id      Int       @id @default(autoincrement())
  narrator_name    String?   @db.VarChar(100)
  narrator_url     String?   @db.VarChar(100)
  narrator_image   String?   @db.VarChar(100)
  mobile           String?   @db.VarChar(15)
  email            String?   @db.VarChar(45)
  description      String?   @db.Text
  status           Int?
  user_id          Int?
  image_alt_text   String?   @db.VarChar(45)
  image_title_text String?   @db.VarChar(45)
  created_at       DateTime? @db.Date
}

model offline_payment {
  id           Int      @id @default(autoincrement())
  cart_type    Int
  cart_items   String   @db.VarChar(45)
  user_id      Int
  amount       Int
  currency     String   @db.VarChar(10)
  date_created DateTime @db.DateTime(0)
  status       Int      @default(0)
}

model order {
  id                  Int      @id @default(autoincrement())
  order_id            BigInt
  tracking_id         String   @db.VarChar(255)
  bank_ref_no         Int
  order_status        String   @db.VarChar(255)
  failure_message     String?  @db.VarChar(255)
  payment_mode        String?  @db.VarChar(255)
  card_name           String?  @db.VarChar(255)
  status_code         String?  @db.VarChar(255)
  status_message      String?  @db.VarChar(255)
  currency            String   @db.VarChar(255)
  amount              Float
  channel             String?  @db.VarChar(15)
  billing_name        String?  @db.VarChar(255)
  billing_address     String?  @db.Text
  billing_city        String?  @db.VarChar(255)
  billing_state       String?  @db.VarChar(255)
  billing_zip         String?  @db.VarChar(255)
  billing_country     String?  @db.VarChar(255)
  billing_tel         String?  @db.VarChar(255)
  billing_email       String?  @db.VarChar(255)
  delivery_name       String?  @db.VarChar(255)
  delivery_address    String?  @db.Text
  delivery_city       String?  @db.VarChar(255)
  delivery_state      String?  @db.VarChar(255)
  delivery_zip        String?  @db.VarChar(255)
  delivery_country    String?  @db.VarChar(255)
  delivery_tel        String?  @db.VarChar(255)
  user_id             Int
  cart_type           String   @db.VarChar(255)
  subtotal            Float
  service_tax         Float
  net_revenue         Float?
  net_total           Float
  date_created        DateTime @default(now()) @db.Timestamp(0)
  coupon_id           String?  @db.VarChar(20)
  coupon_discount_amt Decimal? @db.Decimal(10, 0)
}

model order_book_details {
  book_order_id   Int       @id @default(autoincrement())
  order_id        Int
  user_id         Int
  book_id         Int
  book_cost       Float?    @db.Float
  order_type      Int
  start_date      DateTime? @db.Date
  end_date        DateTime? @db.Date
  order_date      String    @db.VarChar(255)
  rent_plan       Int
  author_id       Int
  language_id     Int?
  copyright_owner Int?
  channel         String?   @db.VarChar(10)
  status          Int
  date_created    DateTime  @default(now()) @db.Timestamp(0)
  user_ip         String?   @db.VarChar(15)
}

model overdrive_books {
  id               Int       @id @default(autoincrement())
  overdrive_id     Int
  catalogue_id     BigInt
  isbn             BigInt
  physical_isbn    String?   @db.VarChar(20)
  title            String    @db.VarChar(150)
  subtitle         String?   @db.VarChar(100)
  edition          Int?
  series           Int?
  publisher        String    @db.VarChar(60)
  imprint          String?   @db.VarChar(50)
  creators         String    @db.VarChar(100)
  subject          String    @db.VarChar(50)
  format           String    @db.VarChar(20)
  filesize         Int
  whs_usd          Float     @db.Float
  whs_usddiscount  Int
  lib_usd          Float     @db.Float
  lib_usddiscount  Int
  onsale_date      DateTime  @db.Date
  pub_date         DateTime? @db.Date
  status           String    @db.VarChar(20)
  sample_link      String    @db.VarChar(100)
  readbox_enabled  String?   @db.VarChar(100)
  special_features String?   @db.VarChar(100)
  book             book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id          Int       @unique
  author_id        Int
  copyright_owner  Int?
  language_id      Int
  type_of_book     Int?
}

model overdrive_transactions {
  id                  Int      @id @default(autoincrement())
  transaction_date    DateTime @db.Date
  overdrive_id        Int
  isbn                Int
  title               String   @db.VarChar(150)
  subtitle            String   @db.VarChar(100)
  author              String   @db.VarChar(100)
  retailer            String   @db.VarChar(100)
  country_of_sale     String   @db.VarChar(10)
  format              String   @db.VarChar(20)
  srp_usd             Float    @db.Float
  discount            Int
  amt_owed_usd        Int
  book                book_tbl @relation(fields: [book_id], references: [book_id])
  book_id             Int      @unique
  author_id           Int
  language_id         Int
  exchange_rate       Int
  inr_value           Float    @db.Float
  final_royalty_value Float    @db.Float
  user_id             Int
  copyright_owner     Int?
  type_of_book        Int
  status              String   @db.VarChar(10)
}

model payout_session {
  session_id   Int    @id @default(autoincrement())
  session_data String @db.LongText
  user_id      Int
  order_id     BigInt
}

model plan_tbl {
  plan_id                 Int      @id @default(autoincrement())
  plan_name               String   @db.VarChar(240)
  plan_display_name       String?  @db.VarChar(45)
  plan_url_name           String?  @db.VarChar(45)
  plan_type               Int?
  plan_image              String   @db.VarChar(100)
  plan_cost               Float    @default(0)
  plan_caption            String?  @db.VarChar(200)
  plan_cost_international Float    @default(0)
  validity_days           Int
  book_validity_days      Int
  available_books         Int
  discount                Decimal  @db.Decimal(10, 0)
  plan_intro_date         DateTime @db.Date
  status                  Int      @default(1) @db.TinyInt
}

model pod_cost_notification {
  id           Int       @id @default(autoincrement())
  user_id      Int?
  book_id      Int?
  date_created DateTime? @db.Date
  mail_status  Int?
}

model pod_order {
  id               Int       @id @default(autoincrement())
  order_id         Int?
  user_id          String?   @db.VarChar(200)
  shipping_charges Int?
  discount         Int?
  order_status     Int?
  split_flag       Int?
  tracking_id      String?   @db.VarChar(45)
  tracking_url     String?   @db.VarChar(200)
  order_date       DateTime? @db.Date
}

model pod_order_details {
  id                   Int       @id @default(autoincrement())
  order_id             Int?
  user_id              Int?
  book_id              Int?
  quantity             Int?
  wrapper_type         Int?
  personalised_message String?   @db.VarChar(500)
  tracking_id          String?   @db.VarChar(45)
  tracking_url         String?   @db.VarChar(200)
  status               Int?
  price                Int?
  order_date           DateTime? @db.Date
}

model pod_bookfair {
  id                  Int       @id @default(autoincrement())
  order_id            Int
  book                book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id             Int       @unique
  author_id           Int?
  copyright_owner     Int?
  price               Int?
  quantity            Int?
  royalty_percentage  Int?
  final_royalty_value Float?
  remarks             String?   @db.Text
  created_at          DateTime? @db.Date
}

model pod_processing {
  id                   Int       @id @default(autoincrement())
  book_id              Int?
  stage_id             Int?
  content_type         String?   @db.VarChar(20)
  word_page_number     Int?
  pod_estimation_pages Int?
  cover_status         Int?      @default(0) @db.TinyInt
  priority             String?   @db.VarChar(10)
  date_created         DateTime? @db.DateTime(0)
  completed            Int?      @default(0)
  rework               Int?      @default(0)
}

model pod_progress {
  id                Int       @id @default(autoincrement())
  book_id           Int?
  status            Int?
  stage             Int?
  startdate         DateTime? @db.DateTime(0)
  enddate           DateTime? @db.DateTime(0)
  on_hold_startdate DateTime? @db.DateTime(0)
  on_hold_enddate   DateTime? @db.DateTime(0)
  remarks           String?   @db.Text
  pause_startdate   DateTime? @db.DateTime(0)
  pause_enddate     DateTime? @db.DateTime(0)
}

model pratilipi_books {
  id              Int      @id @default(autoincrement())
  pustaka_id      Int?
  author_email    String?
  password        String?
  author_name     String?
  language        String?
  content_titles  String?
  series_id       String?
  series_url      String?
  number_of_parts Int?
  uploaded_date   String?
  book            book_tbl @relation(fields: [book_id], references: [book_id])
  book_id         Int      @unique
  author_id       Int?
  language_id     Int?
  copyright_owner Int?
}

model publisher_tbl {
  publisher_id            Int       @id @default(autoincrement())
  publisher_name          String?   @db.VarChar(100)
  publisher_url_name      String?   @db.VarChar(45)
  publisher_regional_name String?   @db.VarChar(100)
  publisher_image         String?   @db.VarChar(100)
  publisher_description   String?   @db.Text
  email_id                String?   @db.VarChar(100)
  mobile                  String?   @db.VarChar(15)
  address                 String?   @db.Text
  bank_acc_no             String?   @db.VarChar(50)
  bank_acc_name           String?   @db.VarChar(100)
  bank_acc_type           String?   @db.VarChar(10)
  ifsc_code               String?   @db.VarChar(20)
  pan_number              String?   @db.VarChar(15)
  copyright_owner         String?   @db.VarChar(45)
  bonus_percentage        Int?
  status                  Int?
  created_at              DateTime? @default(now()) @db.Timestamp(0)
  tds_flag                Int?
}

model rating_review {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(50)
  user_id      Int
  book_id      Int
  comment      String   @db.VarChar(500)
  rating       Int
  status       Int
  date_created DateTime @default(now()) @db.Timestamp(0)
}

model razorpay_requests {
  id               Int       @id @default(autoincrement())
  user_id          Int?
  plan_id          Int?
  razorpay_payload String?   @db.VarChar(500)
  created          DateTime? @db.DateTime(0)
}

model royalty_settlement {
  id                            Int      @id @default(autoincrement())
  copy_right_owner_id           Int
  author_id                     Int?
  settlement_date               DateTime @db.Date
  settlement_amount             Float
  tds_amount                    Float?
  payment_type                  String   @db.VarChar(20)
  bank_transaction_details      String   @db.LongText
  comments                      String   @db.LongText
  pustaka_ebooks                Float?
  pustaka_audiobooks            Float?
  pustaka_online_paperback      Float?
  pustaka_whatsapp_paperback    Float?
  pustaka_bookfair_paperback    Float?
  pustaka_amazon_paperback      Float?
  pustaka_booksellers_paperback Float?
  amazon                        Float?
  kobo                          Float?
  scribd                        Float?
  google_ebooks                 Float?
  google_audiobooks             Float?
  overdrive_ebooks              Float?
  overdrive_audiobooks          Float?
  storytel_ebooks               Float?
  storytel_audiobooks           Float?
  audible                       Float?   @db.Float
  bonus_value                   Float?   @db.Float
}

model sales_consolidation {
  id           Int       @id @default(autoincrement())
  author_id    Int?
  book_id      Int?
  month_year   DateTime? @db.Date
  genre_id     Int?
  language_id  Int?
  type_of_book Int?
  book_cost    Int?
  downloads    Int
}

model scribd_books {
  id                        Int      @id @default(autoincrement())
  updated_at                DateTime @db.Date
  import_id                 Int
  doc_id                    Int
  identifier                String   @db.VarChar(15)
  title                     String   @db.VarChar(100)
  published                 Boolean
  in_subscription           Boolean
  product_page_url          String?  @db.VarChar(50)
  imprints                  String?  @db.VarChar(30)
  status                    String   @db.VarChar(100)
  publisher_tools_config_id Int?
  metadata_status           String?  @db.VarChar(100)
  conversion_status         String?  @db.VarChar(100)
  product_page_pending      String?  @db.VarChar(100)
  subscription_pending      String?  @db.VarChar(100)
  book                      book_tbl @relation(fields: [book_id], references: [book_id])
  book_id                   Int      @unique
  author_id                 Int
  copyright_owner           Int?
  language_id               Int
  duplicate_flag            Int?
}

model scribd_transaction {
  S_No                             Int      @id @default(autoincrement()) @map("S.No")
  Payout_month                     DateTime @db.Date
  Publisher                        String   @db.VarChar(30)
  Amount_owed_for_this_interaction Float    @db.Float
  Amount_owed_currency             String   @db.VarChar(10)
  Price_in_original_currency       Float    @db.Float
  Digital_list_price               Float    @db.Float
  Original_currency                String   @db.VarChar(10)
  Price_type                       String   @db.VarChar(10)
  ISBN                             BigInt
  Title                            String   @db.VarChar(100)
  Authors                          String   @db.VarChar(50)
  Imprints                         String   @db.VarChar(40)
  Viewed                           String   @map("%_Viewed") @db.VarChar(10)
  Payout_type                      String   @db.VarChar(20)
  Start_date_of_interaction        DateTime @db.Date
  Last_date_of_interaction         DateTime @db.Date
  Country_of_reader                String   @db.VarChar(30)
  Unique_interaction_ID            String   @db.VarChar(100)
  ISO_Country_Code                 String   @db.VarChar(20)
  Threshold_Date                   DateTime @db.Date
  book                             book_tbl @relation(fields: [book_id], references: [book_id])
  book_id                          Int      @unique
  author_id                        Int
  language_id                      Int?
  converted_inr                    Float    @db.Float
  user_id                          Int?
  copyright_owner                  Int?
  status                           String   @db.Char(10)
  exchange_rate                    Float    @db.Float
  converted_inr_full               Float?   @db.Float
}

model site_config {
  id       Int    @id @default(autoincrement())
  key      String @db.VarChar(45)
  value    String @db.VarChar(45)
  category String @db.VarChar(45)
}

model storytel_books {
  id               Int       @id @default(autoincrement())
  storytel_book_id String?   @db.VarChar(45)
  isbn             String?   @db.VarChar(15)
  title            String?   @db.VarChar(150)
  author_name      String?   @db.VarChar(100)
  narrator         String?   @db.VarChar(100)
  category         String?   @db.VarChar(45)
  publication_date DateTime? @db.Date
  book             book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id          Int       @unique
  author_id        Int?
  copyright_owner  Int?
  language_id      Int?
  genre_id         Int?
  type_of_book     Int?
}

model storytel_transactions {
  id                          Int       @id @default(autoincrement())
  author                      String?   @db.VarChar(150)
  title                       String?   @db.VarChar(150)
  isbn                        String?   @db.VarChar(15)
  country                     String?   @db.VarChar(5)
  price_model                 String?   @db.VarChar(40)
  no_of_units                 Float?    @db.Float
  net_receipts_per_hour_local Float?    @db.Float
  ecb_exchange_rate           String?   @db.VarChar(45)
  net_receipts_per_hour_inr   Float?    @db.Float
  book_length_in_hours        Float?    @db.Float
  price_per_unit              Float?    @db.Float
  remuneration_eur            Float?    @db.Float
  remuneration_inr            Float?    @db.Float
  publisher                   String?   @db.VarChar(60)
  imprint                     String?   @db.VarChar(45)
  consumption_dates           String?   @db.VarChar(45)
  book_type                   String?   @db.VarChar(25)
  book                        book_tbl  @relation(fields: [book_id], references: [book_id])
  book_id                     Int       @unique
  author_id                   Int?
  language_id                 Int?
  user_id                     BigInt?
  copyright_owner             Int?
  final_royalty_value         Float?    @db.Float
  transaction_date            DateTime? @db.Date
  type_of_book                Int
  status                      String?   @db.VarChar(1)
}

model pratilipi_transactions {
  id                  Int       @id @default(autoincrement())
  user_id             String?   @db.VarChar(25)
  earning             Int?
  currency            String?   @db.VarChar(5)
  author_name         String?   @db.VarChar(150)
  author_id           Int?
  language_id         Int?
  copyright_owner     Int?
  final_royalty_value Float?    @db.Float
  transaction_date    DateTime? @db.Date
  type_of_book        Int
  status              String?   @db.VarChar(1)
}

model subscribe_newsletter {
  id             Int       @id @default(autoincrement())
  email_id       String?   @db.VarChar(150)
  subscribe_date DateTime? @db.Date
}

model subscription {
  id                     Int       @id @default(autoincrement())
  order_id               BigInt
  user_id                Int
  subscription_id        Int
  plan_type              Int?
  number_of_days         Int
  start_date             DateTime? @db.Date
  end_date               DateTime  @db.Date
  total_books_applicable Int
  date_inserted          DateTime  @default(now()) @db.Timestamp(0)
  status                 Int       @default(1)
}

model today_deals {
  id          Int      @id @default(autoincrement())
  date        DateTime @db.Date
  book_id     Int
  language_id Int?
  discount    Int
  status      String   @db.Char(2)
  type        String   @db.VarChar(20)
}

model top_books {
  id                   Int     @id @default(autoincrement())
  purpose              String? @db.VarChar(100)
  sales_count_by_bk_id Int?
  book_id              Int?
  book_title           String? @db.VarChar(200)
  url_name             String? @db.VarChar(100)
  regional_book_title  String? @db.VarChar(200)
  language_id          Int?
  language_id_tmp      Int?
  type_of_book         Int?
  author_id            Int?
  author_name          String? @db.VarChar(100)
  description          String? @db.Text
  download_link        String? @db.VarChar(200)
  cover_image          String? @db.VarChar(200)
  epub_url             String? @db.VarChar(200)
  cost                 Int?
  number_of_page       Int?
  genre_id             Int?
  genre_id_tmp         Int?
  genre_name           String? @db.VarChar(45)
  book_category        String? @db.VarChar(30)
}

model user_address {
  user_id               Int     @id
  billing_name          String? @db.VarChar(100)
  billing_address1      String? @db.VarChar(200)
  billing_address2      String? @db.VarChar(200)
  billing_area_name     String? @db.VarChar(100)
  billing_landmark      String? @db.VarChar(100)
  billing_city          String? @db.VarChar(100)
  billing_state         String? @db.VarChar(45)
  billing_pincode       String? @db.VarChar(7)
  billing_mobile_no     String? @db.VarChar(20)
  billing_alternate_no  String? @db.VarChar(20)
  shipping_name         String? @db.VarChar(100)
  shipping_address1     String? @db.VarChar(200)
  shipping_address2     String? @db.VarChar(200)
  shipping_area_name    String? @db.VarChar(100)
  shipping_landmark     String? @db.VarChar(100)
  shipping_city         String? @db.VarChar(100)
  shipping_state        String? @db.VarChar(45)
  shipping_pincode      String? @db.VarChar(7)
  shipping_mobile_no    String? @db.VarChar(20)
  shipping_alternate_no String? @db.VarChar(20)
}

model user_devices {
  user_id      Int      @id
  device_id1   String   @db.VarChar(20)
  device_info1 String   @db.VarChar(200)
  device_id2   String   @db.VarChar(20)
  device_info2 String   @db.VarChar(200)
  device_id3   String   @db.VarChar(20)
  device_info3 String   @db.VarChar(200)
  created_at   DateTime @db.Date
  updated_at   DateTime @default(now()) @db.Timestamp(0)
}

model user_subscription_tbl {
  subscription_id Int       @id @default(autoincrement())
  user_id         Int
  user_email_id   String    @db.VarChar(100)
  created_at      DateTime  @default(now()) @map(" created_at") @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  created_by      Int       @map(" created_by")
  updated_by      Int
}

model user_wallet {
  id          Int      @id @default(autoincrement())
  user_id     Int
  balance_inr Float
  balance_usd Float
  date        DateTime @default(now()) @db.Timestamp(0)
}

model user_wallet_transaction {
  id               Int      @id @default(autoincrement())
  user_id          Int
  order_id         BigInt
  amount           Float
  currency         String   @db.VarChar(20)
  transaction_type Int
  balance_inr      Float    @db.Float
  balance_usd      Float    @db.Float
  date             DateTime @default(now()) @db.Timestamp(0)
}

model users_tbl {
  user_id         Int       @id @default(autoincrement())
  username        String    @db.VarChar(100)
  password        String    @db.VarChar(100)
  dob             DateTime? @db.Date
  gender          String?   @db.Char(1)
  phone           String?   @db.VarChar(15)
  language_id     Int?      @default(0)
  genre_ids       String?   @db.VarChar(150)
  address         String    @db.Text
  city            String?   @db.VarChar(100)
  zipcode         Int
  country         String    @db.VarChar(100)
  user_type       String    @default("1") @db.VarChar(20)
  created_at      DateTime  @default(now()) @db.Timestamp(0)
  email           String    @db.VarChar(250)
  secret_code     String?   @db.VarChar(45)
  channel         String?   @db.VarChar(10)
  profile_img_url String?   @db.VarChar(100)

  giftBooks author_gift_books[]
}

model wallet_order_tbl {
  id          Int     @id @default(autoincrement())
  order_id    BigInt
  user_id     Int
  cart_type   String  @db.VarChar(255)
  currency    String  @db.VarChar(255)
  subtotal    Int
  service_tax Int
  net_total   Int
  discount    Decimal @db.Decimal(10, 0)
}

model wallet_transaction_type {
  transaction_type  Int    @id @default(autoincrement())
  transaction_value String @db.Text
}

model wishlist {
  id           Int      @id @default(autoincrement())
  book_id      Int
  user_id      Int
  date_created DateTime @default(now()) @db.Timestamp(0)
}
